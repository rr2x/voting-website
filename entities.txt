*
  id = int, auto
  created_at, datetime
  updated_at, datetime


**
  name = varchar
  image = varchar (uploaded, path)
  description = varchar


User
  *
  username (only used internally, same as email?) = varchar
  email = varchar
  password = encrypted
  is_verified = boolean, email activation
  is_active = boolean, deactivate account
  is_superuser (if admin with root access) = boolean


Election
  *
  owner_id = User.id
  **
  candidates = array [candidate_id = Candidate.id, ...] unique...
  start_at = default null, datetime, if election has limit (when to start)
  end_at = default null, datetime, if election has limit (expiration)
  is_public = boolean, true default (if true = vote after sign-in, if false = can only vote if invited)
  electionInviteList_id = default null, otherwise int if is_public=false, ElectionInviteList.id
  deleted_at = datetime, default null


ElectionInviteList
  *
  election_id = Election.id
  invite_data (unique user_id)
    [{ user_id = User.id, status: { sent_at, accepted_at, declined_at }}]


Candidate
  *
  election_id = Election.id (election who owns this candidate)
  **
  user_id = User.id (link to user)
  candidateGroup_id = default null, CandidateGroup.id... if a candidate belongs to a group
  vote_data
    [{ user_id = User.id, voted_at, alt_value }]... alt_value = used for ranking, higher points = higher rank
    // can delete vote


CandidateGroup
  *
  **
  candidate_data
    [{ candidate_id = Candidate.id }]
